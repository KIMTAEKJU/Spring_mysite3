<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- auto proxy -->
	<aop:aspectj-autoproxy />

	<!-- validator(값 맞는 지 확인), conversionService, messageConverter를 자동 등록 -->
	<mvc:annotation-driven>	<!-- @EnableMvc -->

		<!-- Message Converter -->
		<mvc:message-converters>

			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			</bean>

			<!-- json 메세지 컨버터 -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json; charset=UTF-8</value>
					</list>
				</property>
			</bean>

		</mvc:message-converters>

		<!-- Controller의 Handler의 Argument Resolver 등록 -->
		<mvc:argument-resolvers>
			<bean
				class="com.douzone.security.AuthUserHandlerMethodArgumentResolver"></bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- the mvc resources mapping url(virtual) -->
	<mvc:resources mapping="/uploads/images/**" location="file:/duzon/uploads/" />

	<!-- 서블릿 컨테이너의 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler />

	<!-- interceptors -->
	<mvc:interceptors>

		<!-- MyInterceptor01 <mvc:interceptor> <mvc:mapping path="/guestbook/**"/> 
			게스트북으로가는 모든놈은 이제 인터셉터에 걸림 <bean class="com.douzone.mysite.interceptor.MyInterceptor02"/> 
			</mvc:interceptor> -->

		<mvc:interceptor>
			<mvc:mapping path="/user/auth" /> <!-- 로그인처리  -->
			<bean class="com.douzone.security.AuthLoginInterceptor" />
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/user/logout" /> <!-- 로그아웃 처리 -->
			<bean class="com.douzone.security.AuthLogoutInterceptor" />
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/user/auth" />
			<mvc:exclude-mapping path="/user/logout" /> <!-- 위 2개는 핸들러가 없어서 에러나기떄문에 미리 제외 -->
			<mvc:exclude-mapping path="/assets/*" />
			<bean class="com.douzone.security.AuthInterceptor" />
		</mvc:interceptor>

	</mvc:interceptors>

	<!-- 멀티파트 리졸버 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="52428800" /> <!-- 파일업로드 크기의 한계를 넘으면 저장을 안시킴 null or 에러 -->
		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<!-- property name="maxInMemorySize" value="52428800" / -->
		<!-- defaultEncoding --> <!-- 엔코딩 되서 넘어오는애가 아니고 필터도 거쳐오지만 멀티파트면 엔코딩해주지않아서 설정해둠 -->
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<!--본 뷰(이름) 리졸버 설정 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!-- MessageSource -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">

		<property name="basenames">
			<list>
				<value>messages/messages_ko</value>
			</list>
		</property>

	</bean>


	<context:annotation-config /> <!-- @Controller를 찾겠다 -->
	<!-- 어노테이션붙은애들 스캔 -->
	<context:component-scan
		base-package="com.douzone.mysite.controller" /> <!-- 이밑에있는거만 스캔 -->

</beans>